<?php
	$this->headScript()->appendFile($this->httpScheme() . '://maps.googleapis.com/maps/api/js?sensor=false');

	$nodes = array();
	foreach ($this->nodes as $node) {
		$nodeArray = $node->toArray();
		unset($nodeArray['settings']);
		$nodes[] = $nodeArray;
	}
	$this->headScript()->captureStart();
?>
	var nodes = <?php echo Zend_Json::encode($nodes);?>;
	var map;
	var infowindow;

	function stringToDate(datestring)
	{
		var match = /(\d{4})\-0?(\d{1,2})\-0?(\d{1,2})\s0?(\d{1,2}):0?(\d{1,2}):0?(\d{1,2})/i.exec(datestring);

		if (!match.length) {
			return null;
		}

		var date = new Date();

		date.setFullYear(match[1]);
		date.setMonth(parseInt(match[2])-1);
		date.setDate(match[3]);
		date.setHours(match[4]);
		date.setMinutes(match[5]);
		date.setSeconds(match[6]);

		return date;
	}

	function formatDbDate(datestring)
	{
		if (datestring == '0000-00-00 00:00:00') {
			return 'unknown';
		}

		var match = /(\d{4})\-(\d{1,2})\-(\d{1,2})\s(\d{1,2}:\d{1,2}:\d{1,2})/i.exec(datestring);

		if (!match.length) {
			return '';
		}

		return match[3] + '/' + match[2] + '/' + match[1] + ' ' + match[4];
	}

	var lastDevice = null;

	var statsTimer = null;

	function loadStatistics(deviceData)
	{
		lastDevice = deviceData;

		$.ajax({
			url: '<?php echo $this->url(array('module' => 'default',
			                                  'controller' => 'index',
			                                  'action' => 'stats'), 'default', true)?>/location/' + deviceData.mac,
			success: function(data) {
				if (lastDevice !== deviceData) {
					return;
				}

				$('#infowindowcontainer div.stats').html(
					'<div><strong><?php echo $this->translate('default_index_index_ap_active_users')?>:</strong> ' + data.active_users + ' / ' + data.internet_users + ' / ' + data.active_internet_users + '</div>' +
					'<div><strong><?php echo $this->translate('default_index_index_ap_speed_up')?>:</strong> ' + data.total_kbps_up + '</div>' +
					'<div><strong><?php echo $this->translate('default_index_index_ap_speed_down')?>:</strong> ' + data.total_kbps_down + '</div>'
				);

 				statsTimer = setTimeout("loadStatistics(lastDevice);", 5000);
			}
		});
	}

	function loadNetworkStatistics()
	{
		$.ajax({
			url: '<?php echo $this->url(array('module' => 'default',
			                                  'controller' => 'index',
			                                  'action' => 'stats',
			                                  'interface' => 'total'), 'default', true)?>',
			success: function(data) {

				// $('#devicesonline').text(online_ap_count);
				$('#usersonline').text(data.active_users);
				$('#bandwidthup').text(data.total_kbps_up);
				$('#bandwidthdown').text(data.total_kbps_down);

 				statsTimer = setTimeout("loadNetworkStatistics();", 10000);
			}
		});
	}

	$(document).ready(function(){
		$('#nodemap').height(450);

		var latlng = new google.maps.LatLng(<?php echo $this->systemSettings['node_map_center_lat']->getValue(); ?>,
										    <?php echo $this->systemSettings['node_map_center_lng']->getValue(); ?>);
    	var myOptions = {
      		zoom: <?php echo (int) $this->systemSettings['node_map_zoom']->getValue(); ?>,
      		center: latlng,
      		mapTypeId: google.maps.MapTypeId.ROADMAP
    	};

    	map = new google.maps.Map(document.getElementById("nodemap"),
        							  myOptions);

		infowindow = new google.maps.InfoWindow();

		var online_ap_count = 0;
		var online_users = 0;

		$.each(nodes, function(idx, data) {
			var mimage = "<?php echo $this->baseUrl("themes/" . $this->theme . "/images/icons/32x32/marker-red.png")?>";
			var onlinemsg = '';

			var formattedDate = formatDbDate(data.online_status_changed);



			if (data.online_status > 0) {
				onlinemsg = ''; // 'Online users: ' + data.online_users_count;
	    		onlinemsg = onlinemsg + '</div><div>Online since: ' + formattedDate;
	    		mimage = "<?php echo $this->baseUrl("themes/" . $this->theme . "/images/icons/32x32/marker-green.png")?>";
	    		online_ap_count++;
	    		online_users = online_users + data.online_users_count;
	    	} else {
	    		onlinemsg = 'Offline since: ' + formattedDate;
	    	}

			if (data.status == 'planning') {
				mimage = "<?php echo $this->baseUrl("themes/" . $this->theme . "/images/icons/32x32/marker-yellow.png")?>";
			}

			var marker = new google.maps.Marker({
		        position: new google.maps.LatLng(data.location.latitude, data.location.longitude),
		        title: data.name,
		        draggable: false,
		        icon: mimage
		    });



			marker.setMap(map);

		    google.maps.event.addListener(marker, 'click', function(event) {
		        if (statsTimer) {
		        	clearTimeout(statsTimer);
		        }

				infowindow.setContent('<div id="infowindowcontainer">' +
									  '<h5>' + marker.getTitle() +'</h5>' +
									  '<div>MAC: ' + data.mac + '</div>' +
									  '<div>Address: ' + data.location.address + ', ' + data.location.city +', ' + data.location.country + '</div>' +
									  '<div>' + onlinemsg + '</div>' +
									  '<div class="stats">' +
									  '<div><strong><?php echo $this->translate('default_index_index_ap_active_users')?>:</strong> 0 / 0 / 0</div>' +
									  '<div><strong><?php echo $this->translate('default_index_index_ap_speed_up')?>:</strong> 0</div>' +
									  '<div><strong><?php echo $this->translate('default_index_index_ap_speed_down')?>:</strong> 0</div>' +
									  '</div>' +
									  '</div>');
				if (data.online_status > 0) {
					loadStatistics(data);
				}

				infowindow.open(map, marker);
		    });
		});

		$('#devicesonline').text(online_ap_count);
		$('#usersonline').text(online_users);
	});

<?php
	$this->headScript()->captureEnd();
?>

<div id="nodemap"></div>
<div id="networkstats">
	<div><strong><?php echo $this->translate('default_index_index_devices_online')?>:</strong> <span id="devicesonline">0</span></div>
	<div><strong><?php echo $this->translate('default_index_index_users_online')?>:</strong> <span id="usersonline">0</span></div>
	<div><strong><?php echo $this->translate('default_index_index_bandwidth_up')?>:</strong> <span id="bandwidthup">0</span></div>
	<div><strong><?php echo $this->translate('default_index_index_bandwidth_down')?>:</strong> <span id="bandwidthdown">0</span></div>
</div>
