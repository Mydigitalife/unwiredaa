<?php
/**
* Unwired AA GUI
*
* Author & Copyright (c) 2011 Unwired Networks GmbH
* alexander.szlezak@unwired.at
*
* Licensed under the terms of the Affero Gnu Public License version 3
* (AGPLv3 - http://www.gnu.org/licenses/agpl.html) or our proprietory
* license available at http://www.unwired.at/license.html
*/
?>
<h1><?php
    if (isset($this->splashPage)) {
	    echo sprintf($this->translate('captive_index_edit_heading_edit'), $this->splashPage->getTitle());
    } else {
        echo sprintf($this->translate('captive_template_edit_heading_edit'), $this->template->getName());
    }

    $acl = Zend_Registry::get('acl');

    $settings = $this->template->getSettings();

?></h1>
<?php
	$this->headScript()->appendFile($this->baseUrl('scripts/fancybox/jquery.fancybox-1.3.4.pack.js'));
	$this->headLink()->appendStylesheet($this->baseUrl('scripts/fancybox/jquery.fancybox-1.3.4.css'));
	$this->headLink()->appendStylesheet($this->baseUrl('scripts/cleditor/jquery.cleditor.css'));
    $this->headScript()->appendFile($this->baseUrl('scripts/cleditor/jquery.cleditor.min.js'));
    $this->headScript()->captureStart();
?>
	var htmlEditors = false;

	function copyCurrentTabToOthers(currentLanguageOnly)
	{
		var visibleTab = $('.subtabs .ui-tabs-panel:visible:first');

		if (!visibleTab.length) {
			alert('no visible tab found!',1);
			return false;
		}

		var visibleContentInfo = $(visibleTab).attr('id').split('-');

		var otherTabs = $('.subtabs .ui-tabs-panel').not(visibleTab);

        otherTabs.find('textarea').each(function(){
        	if ($.hasData(this)) {
        		$.removeData($(this).get(0), 'cleditor');
        	}
        });

		otherTabs.each(function(){

			var currentTab = this;

			var contentInfo = $(this).attr('id').split('-');

			if (currentLanguageOnly && visibleContentInfo[1] !== contentInfo[1]) {
				return;
			}

			/*
			 * Match desktop-1 or mobile-2
			 */
			var idRegexp = new RegExp(visibleTab.attr('id'), "gi");

			/*
			 * Match content[desktop][2] or content[mobile][1]
			 */
			var nameRegexp = new RegExp("\\[" + visibleContentInfo[0] + "\\]\\[" + visibleContentInfo[1] + "\\]", "gi");

			/*
			 * Replace matched strings with current tab values
			 */
			var newTabContent = visibleTab.children().clone(true);

			newTabContent.find("*").each(function(){
				var oldId = $(this).attr('id');

				if (idRegexp.test($(this).attr('id'))) {
					$(this).attr('id',$(this).attr('id').replace(idRegexp, $(currentTab).attr('id')));
				}

				if (nameRegexp.test($(this).attr('name'))) {
					$(this).attr('name',$(this).attr('name').replace(nameRegexp, '[' + contentInfo[0] + '][' + contentInfo[1] + ']'));
				}

				if ($(this).get(0).tagName == 'TEXTAREA' || $(this).get(0).tagName == 'textarea') {
					$(this).val(visibleTab.find('#' + oldId).val());

                	if ($(this).parent().hasClass('cleditorMain')) {
                		$(this).insertAfter($(this).parent());
                		$(this).prev().remove();
                		$(this).removeAttr('style');
                	}

                	if ($.hasData(this)) {
                		$.removeData($(this).get(0), 'cleditor');
                	}
				}
			});


			$(this).html('')
				   .append(newTabContent);
	  	    $(this).find('textarea').each(function(){
			   $(this).cleditor()[0].disable(false).refresh();
		    });
		});

		otherTabs.find('.cleditorToolbar').height(53);

		return true;
	}

	$(document).ready(function() {
		$.cleditor.defaultOptions.width = 600;
		$.cleditor.defaultOptions.controls = "bold italic underline strikethrough subscript superscript | size " +
                                    		 "style | color removeformat | bullets numbering | outdent " +
                                    		 "indent | alignleft center alignright justify | undo redo | " +
                                    		 "rule image link unlink | cut copy paste pastetext | source";

		$('div.tabs').tabs({
			ajaxOptions: {
                dataFilter: function(result,type) {
                  var data = $.parseJSON(result);
                   // Trick jquery to think that it's html
                   this.dataTypes=['html'];

				   var splashPageEdit = <?php echo isset($this->splashPage) ? '1' : '0'; ?>;

				   var container = $('<div class="span-19 last"/>');

				   $.each(data, function(rowIdx, columns) {
				   		var colWidth = Math.round((18 / Object.keys(columns).length));

						var rowContainer = $('<div class="row '+ rowIdx +' span-19 last"/>');

						var lastColumn = null;

						$.each(columns, function(columnIdx, containers){
							var columnContainer = $('<div class="column ui-widget container' + columnIdx + ' ui-widget-content ui-helper-clearfix ui-corner-all"/>');

							$(columnContainer).addClass('span-' + colWidth);

							$.each(containers, function(containerIdx, contents){
								var sortable = $('<div style="min-height:50px" id="container' + containerIdx + '" class="sortable span-' + colWidth + ' last" />');

								$.each(contents, function(idx, content){
									var portlet = $('<div class="portlet ' + content.widget + '" id="content' + content.content_id + '" />');
									<?php if (isset($this->splashpage)) :?>
									if (!content.splash_id && !content.editable) {
										$(portlet).addClass('static');
									}
									<?php endif; ?>
									var currentLanguageData = null;

									$.each(content.data, function(idxdata, contentData) {
										currentLanguageData = contentData;
										if (contentData.language_id == <?php echo $this->uiLanguage->getLanguageId(); ?>) {
											return false;
										}
									});

									portlet.append('<div class="portlet-header ui-helper-clearfix"><div class="title">' + currentLanguageData.title + '</div></div>');
									portlet.append('<div class="portlet-content"><span class="type"><?php echo $this->translate('captive_content_edit_widget_type'); ?>:</span>' + content.widget +'</div>');

									if (!splashPageEdit || content.editable) {
										var toolset = $('<div class="toolset"><input type="hidden" name="content_id" value="' + content.content_id +'" /></div>');

                                        /**
                                         * Edit button
                                         */
										if (content.edit_allowed) {
											toolset.append('<a class="icon edit"><?php echo $this->translate('captive_content_widget_edit'); ?></a>');
										}

                                        /**
                                         * Delete button
                                         */
										if (content.delete_allowed) {
        									toolset.append('<a href="<?php
        									echo $this->url(array('module' => 'captive',
        			                                     'controller' => 'content',
        			                                     'action' => 'delete',
				                                         'splashId' => (isset($this->splashPage) ? $this->splashPage->getSplashid() : null),
				                                  		 'templateId' => $this->template->getTemplateId()), 'default', true);
        									?>/id/' + content.content_id + '" class="icon delete"><?php echo $this->translate('captive_content_widget_delete'); ?></a>');
										}

										portlet.find('.portlet-header').append(toolset);
									}

									sortable.append(portlet);
								});
								columnContainer.append(sortable);
							});

                            <?php if ($acl->isAllowed($this->currentUser, 'captive_content', 'add')) :?>
							if (rowIdx != 'special') {
								var tools = $('<div class="portlet-tools ui-helper-clearfix tools"/>');
								$(tools).append('<a class="icon add"><?php echo $this->translate('captive_content_widget_add'); ?></a>');
								columnContainer.append(tools);
							}
			    			<?php endif;?>

							lastColumn = columnContainer;
							rowContainer.append(columnContainer);
						});

						$(lastColumn).addClass('last');
						$(container).append(rowContainer);
				   });
                   return container.html();
            	},
            },
			'load': function(event,ui) {

// sortable start

        		var locked = {};
        		var correctItems = {};
        		var correctIndex = {};

            	$('.column:not(.special)').each(function(){
            		var columnId = $(this).attr('id');
            		correctItems[columnId] = $(this).find('.portlet.static');
            		correctIndex[columnId] = [];

                    for(var i=0; i < correctItems[columnId].length; i++){
                    	correctIndex[columnId][i]= $('#' + columnId + ' div.portlet').index(correctItems[columnId][i]);
            		}
            	});

        		var prevPlaceholderIndex = -1;
        		var blockChangeEvent = false;

        		$(".row:not(.special) .column .sortable").sortable({
        			connectWith: ".row:not(.special) .column .sortable",
        			placeholder: "portlet ui-sortable-placeholder ui-state-highlight ui-corner-all",
        			distance: 15,
        			handle: '.portlet-header',
        			items: ".portlet:not(.terms):not(.imprint):not(.static)",
        		    start: function(){
        		    	$('.row:not(.special) .column .sortable').each(function(){
        					$('.portlet.static', this).each(function(){
                        		var $this = $(this);
                        		$this.data('pos', $this.index());
                    		});
        		    	});
                	},
        			receive: function(event, ui) {
        				if (ui.item.prevAll('.tools').length) {
        					ui.item.after(ui.item.siblings(".tools"));
        				}
        			},
        			cancel: ".portlet.static",
                    change: function(event,ui) {
        				$sortable = $(this);
                        $statics = $('.portlet.static', this).detach();
                        $helper = $('<div class="portlet ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>').prependTo(this);
                        $statics.each(function(){
                            var $this = $(this);
                            var target = $this.data('pos');
                            $this.insertAfter($('div.portlet', $sortable).eq(target));
                        });

        				if ($sortable.attr('id') !== ui.placeholder.parent().attr('id')) {
        					$helper.prependTo(ui.placeholder.parent());
        					$otherstatics = $statics = $('.portlet.static', ui.placeholder.parent()).detach();
                            $otherstatics.each(function(){
                                var $this = $(this);
                                var target = $this.data('pos');
                                $this.insertAfter($('div.portlet', ui.placeholder.parent()).eq(target));
                            });
        				}

                        $helper.remove();
                    },
        			update: function(event, ui) {

        				var columnsContentOrder = {'mobile': [], 'desktop': []};

        				$('.column:not(.special)').each(function(){
        					var column = $(this).attr('id').replace(/[^\d]/gi, '');

        					if (!column.length) {
        						column = 0;
        					}

        					var columnOrder = new Array();

        					$(this).find('.portlet').each(function(){
        						var contentId = $(this).attr('id').replace(/[^\d]/gi, '');

        						columnOrder.push(contentId);
        					});

        					if ($(this).parents('#mobile').length) {
        						columnsContentOrder['mobile'][column] = columnOrder;
        					} else {
        						columnsContentOrder['desktop'][column] = columnOrder;
        					}
        				});

        				// @todo Fix the urls of reordering.. it should include layout ID

        				$.ajax({
        					url: '<?php echo $this->url(array('module' => 'captive',
        					                                  'controller' => 'content',
        					                                  'action' => 'reorder',
        					                                  'splashId' => isset($this->splashPage) ? $this->splashPage->getSplashId() : null,
        					                                  'templateId' => $this->template->getTemplateId()), 'default', true); ?>',
        					data: columnsContentOrder,
        					cache: false,
            				type: 'POST',
            				success: function(data){
        						$('.fixednotice').remove();
        						$('<div class="fixednotice"><div class="message success ui-corner-all"><p><?php echo $this->translate('captive_content_edit_reorder_success'); ?></p></div></div>').hide().appendTo($('body')).fadeIn();

        						setTimeout("$('.fixednotice').fadeOut('slow', function(){$(this).remove()});", 5000);
            				},
            				error: function(data){
        						$('.fixednotice').remove();
        						$('<div class="fixednotice"><div class="message error ui-corner-all"><p><?php echo $this->translate('captive_content_edit_reorder_error'); ?></p></div></div>').hide().appendTo($('body')).fadeIn();

        						setTimeout("$('.fixednotice').fadeOut('slow', function(){$(this).remove()});", 5000);
            				},
        				});
        			}
        		});

        		$(".portlet").addClass( "ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" )
        			.find( ".portlet-header" )
        				.addClass( "ui-widget-header ui-corner-all" )
        				.end()
        			.find( ".portlet-content" );

        		/*$(".portlet-header .ui-icon").click(function() {
        			$( this ).toggleClass( "ui-icon-minusthick" ).toggleClass( "ui-icon-plusthick" );
        			$( this ).parents( ".portlet:first" ).find( ".portlet-content" ).toggle();
        		});*/

        		$(".column").disableSelection();

        		$('.portlet-header a.edit').button({icons: { primary: 'ui-icon-pencil'}, text: false});
        		$('.portlet-header a.delete').button({icons: { primary: 'ui-icon-circle-close'}, text: false});
// sortable end
			}
		});

		$('#fancybox-content a.copycontent').live('click', function(){
			var msg = '<?php echo $this->translate('captive_content_edit_copy_content_confirm'); ?>';
			if ($(this).hasClass('language')) {
				msg = '<?php echo $this->translate('captive_content_edit_copy_content_confirm_language'); ?>';
			}

			if (!confirm(msg)) {
				return false;
			}

			copyCurrentTabToOthers($(this).hasClass('language'));
		});

		$('#fancybox-content a.cancel').live('click', function(){
			$.fancybox.close();
			htmlEditors = false;
			return false;
		});

		$('#fancybox-content a.save').live('click', function(){

			var filledTitle = false;

			$('#fancybox-content form:first input[name*=title]').each(function(){
				if ($(this).val().length) {
					filledTitle = true;
					return false;
				}
			});

			if (!filledTitle) {
				alert('<?php echo $this->translate('captive_content_edit_fill_content');?>');
				return false;
			}
/*
			$(filledTitle).parents('.tabs:first').tabs("select", $(filledTitle).parents(".ui-tabs-panel:first").prevAll("div").length);
			$(filledTitle).parents('.tabs:eq(1)').tabs("select", $(filledTitle).parents(".ui-tabs-panel:eq(1)").prevAll("div").length);

			$("#fancybox-content .tabs:not(.subtabs)" ).trigger("tabsselect");
*/

			var tabTarget = 'desktop';

			if ($('#mobile').is(':visible')) {
				tabTarget = 'mobile';
			}

			var postVars = $('#fancybox-content form:first').serialize();
			$('#fancybox-content form:first').find('input, textarea, select').attr('disabled','disabled');

			$.fancybox.showActivity();

			$.ajax({
				url: $('#fancybox-content form:first').attr('action'),
				data: postVars,
				cache: false,
				type: 'POST',
				success: function(data){
					var currentLocation = window.location.href.replace(/#.*$/gi, '') + '#' + tabTarget;

					window.location.href = currentLocation;

					window.location.reload();
					//$.fancybox.hideActivity();
					//$.fancybox.close();

				},
				error: function(data){
					alert('There was an error saving the information!');
					$('#fancybox-content form:first').find('input, textarea, select').removeAttr('disabled');

					$.fancybox.hideActivity();
				},
			})
			return false;
		});

		$('a.icon.edit').live('click',function(){
			$.fancybox.showActivity();
			var columnInfo = $(this).parents(".sortable:first").attr('id');
			var column = columnInfo.replace(/[^0-9]/gi,'');

			var layout = $('li.ui-tabs-selected').attr('id').split('-').pop();

			if (!column.length) {
				column = 0;
			}

			$.ajax({
				url: '<?php echo $this->url(array('module' => 'captive',
				                                  'controller' => 'content',
				                                  'action' => 'edit',
				                                  'splashId' => (isset($this->splashPage) ? $this->splashPage->getSplashid() : null),
				                                  'templateId' => $this->template->getTemplateId()), 'default', true);?>/column/' + column + '/layoutId/' + layout + '/id/' + $(this).prev().val(),

				'success' : function(data){

					$.fancybox({
						content: data,
						modal: false,
						autoDimensions: true,
						hideOnOverlayClick: false,
						showCloseButton: true,
						onComplete: function() {
							$('#fancybox-content').find('.tabs').tabs();
							$.fancybox.resize();
							$.fancybox.center();
							$('#fancybox-content textarea').cleditor();
							$('#fancybox-content .cleditorToolbar').height(53);
						}
					});
				},
				'error' : function(data) {
					alert('There was an error saving the widget');
					$.fancybox.hideActivity();
				}
			})

		});

		$('a.icon.add').live('click',function(){
			var columnInfo = $(this).parent().prevAll(".sortable:first").attr('id');
			var column = columnInfo.replace(/[^0-9]/gi,'');
			var layout = $('li.ui-tabs-selected').attr('id').split('-').pop();

			if (!column.length) {
				column = 0;
			}

			var order = 1;

			if ($(this).parent().prevAll(".sortable:first").length) {
				order = $(this).parent().prevAll(".sortable:first").length+1;
			}

			$('body').append('<div id="dialogadd">'+
							 '<h3><?php echo $this->translate('captive_content_edit_widget_select_add');?></h3><ul id="widgetSet">'+
                                        		'<li><input type="radio" id="Html" value="Html" name="widget" checked="checked" /><label for="Html" class="widgetbutton htmlwidget"><?php echo $this->translate('captive_content_widget_html'); ?></label></li>'+
                                        		'<li><input type="radio" id="Links" value="Links" name="widget" /><label for="Links" class="widgetbutton linkswidget"><?php echo $this->translate('captive_content_widget_links'); ?></label></li>'+
                                        		'<li><input type="radio" id="Iframe" value="Iframe" name="widget" /><label for="Iframe" class="widgetbutton iframewidget"><?php echo $this->translate('captive_content_widget_iframe'); ?></label></li>'+
                                        		'<li><input type="radio" id="Login" value="Login" name="widget" /><label for="Login" class="widgetbutton loginwidget"><?php echo $this->translate('captive_content_widget_login'); ?></label></li>'+
                                        	'</ul></div>');
			$('#widgetSet').buttonset();
			$('#widgetSet label').addClass('ui-corner-all');
			$('#dialogadd').dialog({
				modal: true,
				title: '<?php echo $this->translate('content_edit_widget_add_title'); ?>',
				closeOnEscape: false,
				width: 380,
				close: function(){
					$(this).dialog('destroy');
					$('#dialogadd').remove();
				},
				buttons: {
					'<?php echo $this->translate('content_edit_button_add'); ?>' : function() {
						var addDialog = this;
						$.fancybox.showActivity();

						$.ajax({
							url: '<?php echo $this->url(array('module' => 'captive',
							                                  'controller' => 'content',
							                                  'action' => 'add',
							                                  'splashId' => (isset($this->splashPage) ? $this->splashPage->getSplashid() : null),
							                                  'templateId' => $this->template->getTemplateId()), 'default', true);?>/column/' + column + '/order/' + order + '/layoutId/' + layout + '/widget/' + $('#widgetSet input:checked').val(),

							'success' : function(data){

								$.fancybox({
									content: data,
									modal: false,
									autoDimensions: true,
									hideOnOverlayClick: false,
									showCloseButton: true,
									onComplete: function() {

										$('#fancybox-content').find('.tabs').tabs();

                            			$('input[type=hidden][name*=order]').each(function(){
											$(this).val(order);
                            			});

										$.fancybox.resize();
										$.fancybox.center();
										$('#fancybox-content textarea').cleditor();
										$('#fancybox-content .cleditorToolbar').height(53);
									}
								});

								$(addDialog).dialog('close');
							},
							'error' : function(data) {
								alert('There was an error adding the widget');
								$(addDialog).dialog('close');
							}
						})
					},
					'<?php echo $this->translate('content_edit_button_cancel'); ?>' : function() {
						$(this).dialog('close');
					}
				}
			});
		});

	});
<?php
    $this->headScript()->captureEnd();
?>
<div class="span-19 last">
	<div class="tabs span-19 last">
		<ul>
			<?php foreach ($this->entity->getLayouts() as $layout) :?>
			<li id="layout-<?php echo $layout->getLayoutId(); ?>"><a href="<?php
			                    echo $this->url(array('module' => 'captive',
			                                         'controller' => 'content',
			                                         'action' => 'layout-content',
			                                         'id' => $layout->getLayoutId(),
			                                         'splashId' => ($this->entity instanceof Captive_Model_SplashPage) ? $this->entity->getSplashId() : null,
			                                         'templateId' => $this->entity->getTemplateId()),
			                                   'default',
			                                   true); ?>"><?php echo $layout->getName(); ?></a></li>
			<?php endforeach; ?>
		</ul>
  </div>
  <div class="formelement buttons span-19 last">
  	<a href="<?php echo $this->url(array('module' => 'captive',
  	                                     'controller' => !isset($this->splashPage) ? 'template' : 'index'),
  	                               'default',
  	                               true); ?>" class="button blue right"><span><?php echo $this->translate('captive_content_edit_button_back');?></span></a>
  </div>
</div>