<h1><?php
	if ($this->entity->getNodeId()) {
		echo sprintf($this->translate((isset($this->isViewOnly)) ? 'nodes_index_view_heading' : 'nodes_index_edit_heading_edit'), $this->entity->getName());
	} else {
		echo $this->translate('nodes_index_edit_heading_add');
	}
?></h1>
<?php
	$this->headScript()->appendFile($this->httpScheme(). '://maps.googleapis.com/maps/api/js?sensor=false&language=' . $this->translate()->getLocale());
	$this->headScript()->appendFile($this->baseUrl('scripts/jstree/jquery.jstree.js'));
	$this->headLink()->appendStylesheet($this->baseUrl('scripts/jstree/themes/default/style.css'));
	$this->headScript()->appendFile($this->baseUrl('scripts/fancybox/jquery.fancybox-1.3.4.pack.js'));
	$this->headLink()->appendStylesheet($this->baseUrl('scripts/fancybox/jquery.fancybox-1.3.4.css'));
	$this->headScript()->captureStart();
    $adminGroups = $this->currentUser->getGroupsAssigned();

	$openGroup = ($this->form->group_id->getValue()) ? $this->form->group_id->getValue() : key($adminGroups);
?>

var map;
var marker;
var geocoder;
var infowindow;
var adminGroups = <?php echo Zend_Json::encode($this->currentUser->getGroupsAssigned());?>;

$(function () {
	$("input[name=group_id]").hide().after($('.grouptree'));

<?php if (!isset($this->isViewOnly)) :?>
	$('#settings-dhcp').change(function(){
		if ($(this).is(':checked')) {
			$(this).parent().siblings().find('input').attr('disabled','disabled');
		} else {
			$(this).parent().siblings().find('input').removeAttr('disabled');
		}
	}).change();

	if (!$('#mac').val().length) {
		$('#status option[value=enabled]').attr('disabled', 'disabled');
	}

	$('#mac').change(function(){
		var value = $(this).val();
		if (value.length != 12 || value.indexOf(':') >= 0) {
			return;
		}

		$(this).val(value.replace(/([A-F0-9]{2})([A-F0-9]{2})([A-F0-9]{2})([A-F0-9]{2})([A-F0-9]{2})([A-F0-9]{2})/gi, '$1:$2:$3:$4:$5:$6'));
	}).blur(function(){
		if ($(this).val().length >= 12) {
			$('#status option[value=enabled]').removeAttr('disabled');
		} else {
			$('#status option[value=enabled]').attr('disabled', 'disabled');
			if ($('#status option[value=enabled]').is(':selected')) {
				$('#status option:first').attr('selected', 'selected');
			}
		}
	}).change();
<?php endif; ?>
    $(".grouptree")
        .jstree({
            "plugins" : ["themes","html_data","ui"],
            "core" : { "initially_open" : [ "group_<?php echo $openGroup; ?>" ] },
            "ui" : { select_limit : 1,  "initially_select" : [ "group_<?php echo $openGroup; ?>" ] }
        })
        .bind("select_node.jstree", function (event, data) {
			var groupId = data.rslt.obj.attr("id").replace(/[^\d]+/gi,'');

			$("input[name=group_id]").val(groupId);
	     });

	$('#location-latitude').after('<a id="gmap" href="#mapwrap">map</a>');

	geocoder = new google.maps.Geocoder();

	var latlng = new google.maps.LatLng(48.208, 16.373);

    var myOptions = {
      		zoom: 12,
      		center: latlng,
      		mapTypeId: google.maps.MapTypeId.ROADMAP
    	};

    map = new google.maps.Map(document.getElementById("map"),
        				      myOptions);

	marker = new google.maps.Marker({
        position: latlng,
        draggable: true
    });
	marker.setMap(map);

	infowindow = new google.maps.InfoWindow();

	google.maps.event.addListener(marker, 'dragstart', function(){
		infowindow.close();
		return false;

    });

	google.maps.event.addListener(marker, 'dragend', function(){
		show_info();
    });

    google.maps.event.addListener(map, 'click', function(event) {
    	marker.setPosition(event.latLng);
		show_info();
    });

    function show_info()
    {
    	var position = marker.getPosition();

		geocoder.geocode({location: position},
						 function(results, status){

			if (status !== google.maps.GeocoderStatus.OK /* || results[0].types != 'street_address' */) {
				marker.setTitle('<?php echo $this->translate('nodes_index_edit_unknown_address')?>');

				return true;
			}

			$("select[name=apply_map_data]").data('geodata', results);

			marker.setTitle(results[0].formatted_address);
			//map.setCenter(position);
			infowindow.setContent('<h5>' + marker.getTitle() + '</h5><p>lat: ' + position.lat() + '</p><p>lng: ' + position.lng() + '</p>');
			infowindow.open(map, marker);
		});

		return false;
    }
	<?php if (!isset($this->isViewOnly)) :?>
	$('#mapwrap .buttons a.apply').click(function(){
		var apply = $("select[name=apply_map_data]").val();
		var geodata = $("select[name=apply_map_data]").data('geodata');

		switch (apply) {
			case "both":
			case "address":
					/**
					 * Reset address fields
					 */
					$('#location-address').val('');
					$('#location-city').val('');
					$('#location-zip').val('');
					$('#location-country').val('AT');

					/**
					 * Fill in the address
					 */
			      	$.each(geodata, function(idx, data) {
			      		switch(data.types[0]) {
			      			case 'street_address':
			      				var addr = data.formatted_address.split(',');

			      				$('#location-address').val(addr[0]);
			      			break;

			      			case 'locality':
			      				$('#location-city').val(data.address_components[0].short_name);
			      			break;

			      			case 'postal_code':
			      				$('#location-zip').val(data.address_components[0].short_name);
			      			break;

			      			case 'country':
			      				$('#location-country').val(data.address_components[0].short_name);
			      			break;
			      		}
			      	});

				  	if (apply == "address") {
				  		break;
				  	}
			case "address":
			default:
				$('#location-latitude').val(Math.round(marker.getPosition().lat() * 1000000)/1000000);
				$('#location-longitude').val(Math.round(marker.getPosition().lng() * 1000000)/1000000);
		}

	    $.fancybox.close();

	    return false;
	});
	<?php else: ?>
	setTimeout("$('.grouptree').addClass('disabled');", 1000);
	<?php endif;?>
	$('#mapwrap .buttons a.cancel').click(function(){
	    $.fancybox.close();

	    return false;
	});

	$('#gmap').fancybox({
						autoDimensions: false,
						width: 500,
						height: 465,
						type: 'inline',
						onStart: function() {
									var lat = parseFloat($('#location-latitude').val());
									var lng = parseFloat($('#location-longitude').val());

									if (!lat || !lng) {
										var address_info = new Array();

										$('#location-address, #location-city, #location-zip, #location-country').each(function(){
											if ($(this).val().length) {
												address_info.push($(this).val());
											}
										});

										geocoder.geocode( { 'address': address_info.join(', ')}, function(results, status) {
									      if (status == google.maps.GeocoderStatus.OK) {
									        lat = results[0].geometry.location.lat();
									        lng = results[0].geometry.location.lng();
									        infowindow.setContent('<h5>' + results[0].formatted_address + '</h5><p>lat: '
									        					  + lat + '</p><p>lng: '
									        					  + lng + '</p>');
											infowindow.open(map, marker);
											marker.setPosition(new google.maps.LatLng(lat, lng));
									      } else {
									      	marker.setPosition(new google.maps.LatLng(marker.getPosition().lat(),
									      								 			  marker.getPosition().lng()));
									      }
									    });
									} else {
										marker.setPosition(new google.maps.LatLng(lat,
									      								 		  lng));
									}
								},
						onComplete: function () {
										google.maps.event.trigger(map, "resize");
										map.setCenter(marker.getPosition());
									}
						});
});
<?php
	$this->headScript()->captureEnd();
?>
<?php if (isset($this->isViewOnly)) :?>
<div class="span-19 last">
	<a href="<?php echo $this->refererUrl; ?>" class="button small blue right">
		<span><?php echo $this->translate('nodes_index_edit_form_button_back'); ?></span>
	</a>
</div>
<?php endif; ?>
<?php echo $this->form; ?>
<div class="grouptree span-8">
	<?php echo $this->tree($this->rootGroup, null, array('prefix' => 'group_')); ?>
</div>
<div style="display:none">
	<div id="mapwrap">
		<div id="map" class="fancymap"> </div>
		<?php if (!isset($this->isViewOnly)) :?>
		<div class="buttons right">
			<select name="apply_map_data">
				<option value="coordinates"><?php echo $this->translate('nodes_index_edit_form_map_coordinates');?></option>
				<option value="address"><?php echo $this->translate('nodes_index_edit_form_map_address');?></option>
				<option value="both"><?php echo $this->translate('nodes_index_edit_form_map_both');?></option>
			</select>

			<a href="javascript:;" class="apply button small green">
				<span><?php echo $this->translate('nodes_index_edit_form_button_apply'); ?></span>
			</a>
			<a href="javascript:;" class="cancel button small blue">
				<span><?php echo $this->translate('nodes_index_edit_form_button_cancel'); ?></span>
			</a>

		</div>
	    <?php endif; ?>
	</div>
</div>

<?php
    if ($this->entity->getNodeId()) {
        echo $this->showEntityLog($this->entity, $this->entity->getNodeId());
    }
?>
<?php if (isset($this->isViewOnly)) :?>
<div class="buttons span-19 last">
	<a href="<?php echo $this->refererUrl; ?>" class="button small blue right">
		<span><?php echo $this->translate('nodes_index_edit_form_button_back'); ?></span>
	</a>
</div>
<?php endif; ?>