<h1><?php
	if ($this->entity->getReportGroupId()) {
		echo $this->translate('report_group_title_edit').' '.$this->entity->getTitle();
	} else {
		echo $this->translate('report_group_title_add');
	}
?></h1>
<?php
	$this->headScript()->appendFile($this->baseUrl('scripts/jstree/jquery.jstree.js'));
	$this->headLink()->appendStylesheet($this->baseUrl('scripts/jstree/themes/default/style.css'));

	$groupsAssigned = $this->entity->getGroupsAssigned();

	if (empty($groupsAssigned)) {
		$groupsAssigned = $this->currentUser->getGroupsAssigned();
		$groupsAssigned = array_slice($groupsAssigned, 0, 1, true);
	}

	$this->headScript()->captureStart();

?>
var adminGroups = <?php echo Zend_Json::encode($this->currentUser->getGroupsAssigned());?>;
var groupsAssigned = <?php echo Zend_Json::encode($groupsAssigned);?>;

$(function () {
	$("label[for=groups_assigned]").siblings('label').remove();
	$("label[for=groups_assigned]").after($('.grouptree'));
	$("label[for=available_roles]").parent().hide();

	var init_select = new Array();

	$.each(groupsAssigned, function (idx, data) {
		init_select.push('group_' + idx);
	});

	groupIds = [];

    $(".grouptree")
        .jstree({
            "plugins" : ["themes","html_data","ui"],
            "core" : { "initially_open" : init_select },
            "ui" : { select_multiple_modifier: 'on',
            		 disable_selecting_children: true,
					 select_limit : -1,
					 "initially_select" : init_select
					}
        })
        .bind("select_node.jstree", function (event, data) {
			var groupId = data.rslt.obj.attr("id").replace(/[^\d]+/gi,'');

			if (groupIds.indexOf(groupId) == -1) {
				groupIds.push(groupId);

				var newRole = $("label[for=available_roles]").parent().clone();

				$(newRole).children('label').attr('for', 'selgrp' + groupId)
											.html(data.rslt.obj.children('a:first').text() + ' ');

				$(newRole).children('input').attr('id', 'selgrp' + groupId)
											 .attr('name', 'groups_assigned[' + groupId + ']')
											 .val(groupId);

				$("label[for=available_roles]").parent().before(newRole);

				newRole.show();
			}
	     })
        .bind("deselect_node.jstree", function (event, data) {
			var groupId = data.rslt.obj.attr("id").replace(/[^\d]+/gi,'');

			var idx = groupIds.indexOf(groupId);

			if (idx != -1) {
				groupIds.splice(idx, 1);
				$('#selgrp'+groupId).parent().remove();
			}
	     });


	  $('#date_relative').change(function(){
        if ($(this).is(':checked')) {
        	$(this).parent().next().show().find('select:first').change();
        } else {
        	$(this).parent().next().hide().next().show().next().show();
        }
	  });

	  $('#timeframe').change(function() {
	  	if ($(this).val() == 'custom') {
	  		$(this).parent().next().show().next().show();
	  	} else {
	  		$(this).parent().next().hide().next().hide();

			var dateFrom = new Date();
			var dateTo = new Date();

	  		switch ($(this).val()) {
	  			case 'yesterday':
	  				dateFrom = dateFrom.setTime(dateFrom.getTime()-24*3600);
	  				dateTo = dateFrom;
	  			break;

	  			case 'lastweek':
					/**
					 * @todo Fix if date is less than 7
					 */
					dateFrom.setDate(dateFrom.getDate()-7);

	  			case 'currweek':
					var dayOfWeek = dateFrom.getDay();

					if (dayOfWeek == 0) {
						dateFrom.setDate(dateFrom.getDate()-6);
					} else {
						dayOfWeek = dayOfWeek-1;
						dateFrom.setDate(dateFrom.getDate()-6);
					}

					dateTo = dateFrom;
					dateTo.setDate(dateFrom.getDate()+6);
	  			break;

	  			case 'lastmonth':

	  			break;

	  			case 'currentmonth':

	  			break;

	  			case 'lastyear':

	  			break;

	  			case 'curryear':

	  			break;
	  		}

		  	dateFrom.setHours(0);
			dateFrom.setMinutes(0);
			dateFrom.setSeconds(0);
			dateTo.setHours(23);
			dateTo.setMinutes(59);
			dateTo.setSeconds(0);
	  	}

	  	$('#date_from').datetimepicker('setDate', dateFrom);
	  	$('#date_to').datetimepicker('setDate', dateTo);
	  });

	  $('#report_type').change(function(){
	  	if ($(this).val() == 0) {
	  		$(this).parent().next().hide();
	  	} else {
	  		$(this).parent().next().show();
	  	}
	  });

	  $('#date_relative').change();
	  $('#report_type').change();

});
<?php
	$this->headScript()->captureEnd();


	echo $this->form;

	if ($this->entity->getCodeTemplate()->isCapable(Reports_Model_CodeTemplate::CAP_GLOBAL)) :
?>

<div class="grouptree span-8">
	<?php echo $this->tree($this->rootGroup, null, array('prefix' => 'group_')); ?>
</div>

<?php
    endif;
?>